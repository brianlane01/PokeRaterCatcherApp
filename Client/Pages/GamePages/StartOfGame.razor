@page "/StartGame"
@inject HttpClient httpClient
@inject IJSRuntime jsRuntime
@inject NavigationManager navigationManager
@inherits LayoutComponentBase
@attribute [Authorize]

<style>
    body{
        background-image: url('https://images.pexels.com/photos/7794399/pexels-photo-7794399.jpeg?auto=compress&cs=tinysrgb&w=1200');
        background-repeat: no-repeat;
        background-size:  cover;
    }
</style>

<div class="container" id="containerForPlayerCreation">
    <div class="card" id="cardForPlayerAndInventory">
        <EditForm Model="@CreateInventory" OnValidSubmit="@CreatePlayerAsync">
            <DataAnnotationsValidator />
                <validationSummary />
            <h1 class="text-center" id="welcomeHeader">Welcome to the beginning of your Pokémon Journey</h1>
            <div Elevation="24"id="mainBody">
                <MudContainer Class="mt-4">
                    <MudPaper Elevation="24" Class="p-5">
                        <MudTypography Typo="Typo.body1" Class="mb-4">
                            <h4 class="text-center">Dive into the World of Pokemon</h4>
                            Welcome, Trainer, to the vibrant and enchanting world of Pokémon! As you embark on your journey, prepare to be immersed in a realm teeming with extraordinary creatures known as Pokémon. In the picturesque region of Lanenopia, a land brimming with diverse landscapes and hidden wonders, you are about to set out on an unforgettable adventure.
                        </MudTypography>
                        <br>
                        <br>
                        <MudContainer Class="mb-4">
                            <MudGrid>
                                <MudItem xs="12" md="6">
                                    <FeatureCard Title="Explore and Search">
                                        Before you dive into the captivating world of Pokémon, you have the unique opportunity to shape your destiny. As a budding Pokémon Trainer, you'll embark on a quest to become a Pokémon Master, forging unbreakable bonds with your Pokémon companions and facing challenges that will test your skills, courage, and strategic prowess.
                                    </FeatureCard>
                                </MudItem>

                                <MudItem xs="12" md="6">
                                    <FeatureCard Title="Visualize Your Pokemon">
                                        In the heart of your journey lies the moment to create your very own Pokémon Trainer. Customize your appearance, choose your starter Pokémon, and make decisions that will shape your destiny. The path ahead is filled with mysteries, friendships, and the thrill of discovering new Pokémon. The bond between Trainer and Pokémon is unbreakable, and the choices you make will define not only your adventure but also the destiny of the Pokémon world.
                                    </FeatureCard>
                                </MudItem>

                                <MudItem xs="12" md="6">
                                    <FeatureCard Title="Customize Your Pokemon">
                                        Get ready, Trainer, for an epic journey awaits you! Your Pokémon adventure is about to begin, and the possibilities are as vast as the Pokémon themselves. Are you ready to catch 'em all and become a legend in the world of Pokémon? The journey starts with you!
                                    </FeatureCard>
                                </MudItem>
                            </MudGrid>
                        </MudContainer>

                        <MudTypography Typo="Typo.body1">
                            Once satisfied, hit the "Submit" button to create your character and begin the journey. A confirmation prompt ensures your commitment to this exciting addition. Once confirmed, watch as your Pokemon becomes an integral part of your adventure.
                        </MudTypography>
                    </MudPaper>
                </MudContainer>
            </div>
            <MudContainer Class="mt-4">
                <MudPaper Elevation="24" Class="p-5">
                    <div class="form-group" id="enterPlayerName">
                        <label for="NameOfPlayer" id="nameLabel">Now to begin, what is your name Trainer?</label>
                        <div class="col-md-5" id="nameField">
                            <InputText id="NameOfPlayer" class="form-control" @bind-Value="@CreateInventory.NameOfPlayer" />
                        </div>
                    </div>
                </MudPaper>
            </MudContainer>
            <br>
            <MudContainer Class="mt-4">
                <MudPaper Elevation="24" Class="p-5">
                    <MudExpansionPanels >
                        <MudExpansionPanel Text="Let us now set up your inventory for your adventure:" IsExpandedChanged="ExpandedChanged">
                            @_panelContent
                            <MudContainer Class="mt-4">
                                <MudPaper Elevation="24" Class="p-5">
                                    <div class="card" id="inventoryDropDown">
                                        <div class="card-header" id="inventoryCardTitle">
                                            <h4 class="card-title text-center">Details for @CreateInventory.NameOfPlayer's Inventory</h4>
                                        </div>
                                        <div class="card-body">
                                            <MudExpansionPanels>
                                                <MudExpansionPanel Text="Poké Balls you will start with:">
                                                    <h4>Poké Balls</h4>
                                                    <p>
                                                        Poké Balls are used to catch Pokémon. There are different types of Poké Balls that have different
                                                        catch rates. The higher the catch rate the easier it is to catch a Pokémon. The Poké Balls you will be given are:
                                                    </p>
                                                    <ul>
                                                        <li>Poké Ball</li>
                                                        <li>Great Ball</li>
                                                        <li>Ultra Ball</li>
                                                    </ul>
                                                    <br>
                                                    <p>
                                                        You will be given 20 Poké Balls, 10 Great Balls, and 5 Ultra Balls.
                                                    </p>
                                                </MudExpansionPanel>
                                                <MudExpansionPanel Text="Here are the Health Items you will begin the journey with:">
                                                    <div id="healthItems">
                                                        <h4>Health Items</h4>
                                                        <p>
                                                            Health Items are used to heal your Pokémon. There are different types of Health Items that heal
                                                            different amounts of health. The Health Items you will be given are:
                                                        </p>
                                                        <ul>
                                                            <li>Potion</li>
                                                            <li>Super Potion</li>
                                                            <li>Hyper Potion</li>
                                                            <li>Max Potion</li>
                                                        </ul>
                                                        <br>
                                                        <p>
                                                            You will be given 20 Potions, 10 Super Potions, 6 Hyper Potions, and 2 Max Potions.
                                                        </p>
                                                    </div>
                                                </MudExpansionPanel>
                                                <MudExpansionPanel Text="Here are the Revive Items that you will begin the adventure with:">
                                                    <div id="reviveItems">
                                                        <h4>Revive Items</h4>
                                                        <p>
                                                            Revive Items are used to revive your Pokémon. There are different types of Revive Items that revive
                                                            different amounts of health. The Revive Items you will be given are:
                                                        </p>
                                                        <ul>
                                                            <li>Revive</li>
                                                            <li>Max Revive</li>
                                                        </ul>
                                                        <br>
                                                        <p>
                                                            You will be given 20 Revives and 4 Max Revives.
                                                        </p>
                                                    </div>
                                                </MudExpansionPanel>
                                                <MudExpansionPanel Text="Here are the Technical Machines that you will begin the adventure with:">
                                                    <div id="tms">
                                                        <h4>TMs</h4>
                                                        <p>
                                                            TMs are used to teach your Pokémon new moves. There are different types of TMs that teach
                                                            different moves. The TMs you will be given are:
                                                        </p>
                                                        <ul>
                                                            <li>TM01 - Mega Punch</li>
                                                            <li>TM02 - Razor Wind</li>
                                                            <li>TM03 - Swords Dance</li>
                                                        </ul>
                                                        <br>
                                                        <p>
                                                            You will be given 1 of each TM.
                                                        </p>
                                                    </div>
                                                </MudExpansionPanel>
                                                <MudExpansionPanel Text="Here are the Status Condition Removal Items you will have at the start of the Adventure:">
                                                    <div id="statusConditionItems">
                                                        <h4>Status Condition Items</h4>
                                                        <p>
                                                            Status Condition Items are used to heal your Pokémon from status conditions. There are different types of Status Condition Items that heal
                                                            different status conditions. The Status Condition Items you will be given are:
                                                        </p>
                                                        <ul>
                                                            <li>Antidote</li>
                                                            <li>Awakening</li>
                                                            <li>Burn Heal</li>
                                                            <li>Ice Heal</li>
                                                            <li>Paralyze Heal</li>
                                                        </ul>
                                                        <br>
                                                        <p>
                                                            You will be given 5 of each Status Condition Item.
                                                        </p>
                                                    </div>
                                                </MudExpansionPanel>
                                            </MudExpansionPanels>
                                        </div>
                                    </div>
                                </MudPaper>
                            </MudContainer>
                        </MudExpansionPanel>
                    </MudExpansionPanels>
                </MudPaper>
            </MudContainer>
            <br>
            <div class="container" id="containerForCreatePlayer">
                <div class="card" id="addPokemonWhole">
                    <h4 class="card-title" id="pokeCardTitle">Now its time to make the most important decision on your new adventure ....</h4>
                    <div id="pokeDropDown">
                        <MudExpansionPanels>
                            <MudExpansionPanel Text="🐲 〶 Starter Pokémon ⏅ 🐉">
                                <table class = "table table-dark table-hover table-bordered " id="pokeTable">
                                    <thead>
                                        <tr>
                                            <th>Add to Party</th>
                                            <th>Pokédex Number</th>
                                            <th>Pokémon Name</th>
                                            <th>Pokémon NickName</th>
                                            <th>Pokémon Type One</th>
                                            <th>Pokémon Type Two</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Pokemon != null)
                                        {
                                            @foreach (var pokemon in Pokemon)
                                            {
                                                if (pokemon.PokedexNumber == 4 || pokemon.PokedexNumber == 7 || pokemon.PokedexNumber == 25 || pokemon.PokedexNumber == 1 ||
                                                    pokemon.PokedexNumber == 152 || pokemon.PokedexNumber == 155 || pokemon.PokedexNumber == 158 || pokemon.PokedexNumber == 252 ||
                                                    pokemon.PokedexNumber == 255 || pokemon.PokedexNumber == 258 || pokemon.PokedexNumber == 387 || pokemon.PokedexNumber == 390 ||
                                                    pokemon.PokedexNumber == 393 || pokemon.PokedexNumber == 495 || pokemon.PokedexNumber == 498 || pokemon.PokedexNumber == 501 ||
                                                    pokemon.PokedexNumber == 650 || pokemon.PokedexNumber == 653 || pokemon.PokedexNumber == 656 || pokemon.PokedexNumber == 722 ||
                                                    pokemon.PokedexNumber == 725 || pokemon.PokedexNumber == 728 || pokemon.PokedexNumber == 810 || pokemon.PokedexNumber == 813 ||
                                                    pokemon.PokedexNumber == 816 || pokemon.PokedexNumber == 133)
                                                {
                                                    <tr>
                                                        <td>
                                                            <input type="checkbox" class="form-check-input" checked="@IsPokemonSelected(pokemon.Id)" 
                                                                    @onchange="() => TogglePokemonSelection(pokemon.Id)" 
                                                                    disabled="@(selectedCount >= 3 && !IsPokemonSelected(pokemon.Id))" />
                                                        </td>
                                                        <td>@pokemon.PokedexNumber</td>
                                                        <td>@pokemon.Name</td>
                                                        <td>@pokemon.PokeNickName</td>
                                                        <td>@pokemon.PokeTypeNameOne</td>
                                                        <td>@pokemon.PokeTypeNameTwo</td>
                                                    </tr>
                                                }
                                            }
                                        }
                                    </tbody>
                                </table>
                            </MudExpansionPanel>
                        </MudExpansionPanels>
                    </div>
                </div>
            </div>
            <br>
            <div id="submitButton">
                <button type="submit" class="btn btn-dark bt-block" id="playerSubmit">Submit</button> 
            </div>
        </EditForm>
    </div>
</div>

@code {
    private PlayerInventoryCreate CreateInventory = new PlayerInventoryCreate();
    private PlayerCreate CreatePlayer = new PlayerCreate();
    private List<PokemonList>? Pokemon;
    private PokemonDetail? PokemonDetail = new PokemonDetail();
    private PlayerPokeCreate PlayerPokeCreate = new PlayerPokeCreate();

    private string? ErrorMessage;

    private int currentPage = 1;
    private const int PageSize = 10;

    private Dictionary<int, bool> PokemonDictionary = new Dictionary<int, bool>();

    private int selectedCount = 0;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await LoadData();
        }
        catch (Exception e)
        {
            ErrorMessage = e.Message;
        }
    }

    private async Task LoadData()
    {
        try
        {
            Pokemon = await httpClient.GetFromJsonAsync<List<PokemonList>>($"api/Pokemon/ForPlayerCreate");
            if (Pokemon != null)
            {
                Pokemon = Pokemon.OrderBy(p => p.PokedexNumber).ToList();
                PokemonDictionary = Pokemon.ToDictionary(p => p.Id, p => false); 
            }
        }
        catch (Exception e)
        {
            ErrorMessage = e.Message;
        }
    }

    private async Task PreviousPage()
    {
        if (currentPage > 1)
        {
            currentPage--;
            await LoadData();
        }
    }

    private async Task NextPage()
    {
        currentPage++;
        await LoadData();
    }

    private bool IsPokemonSelected(int pokemonId)
    {
        return PokemonDictionary.TryGetValue(pokemonId, out var selected) && selected;
    }

    private void TogglePokemonSelection(int pokemonId)
    {
        if (PokemonDictionary.ContainsKey(pokemonId))
        {
            bool currentSelection = PokemonDictionary[pokemonId];
        
            if (currentSelection && selectedCount > 0)
            {
            // If the Pokémon is currently selected, and there are selected Pokémon,
            // toggle the selection and decrement the count.
            PokemonDictionary[pokemonId] = !currentSelection;
            selectedCount--;
            }
            else if (!currentSelection && selectedCount < 3)
            {
            // If the Pokémon is not currently selected, and the limit is not reached,
            // toggle the selection and increment the count.
            PokemonDictionary[pokemonId] = !currentSelection;
            selectedCount++;
            }

            StateHasChanged(); // Add this line to trigger a re-render after the state change
        }
        else if(selectedCount == 3)
        {
            jsRuntime.InvokeVoidAsync("alert", "You can only choose three Pokémon at the start of your adventure");
        }
    }

    private async Task CreatePlayerAsync()
    {
        bool confirmed = await jsRuntime.InvokeAsync<bool>("confirm", new object[] { "Are you sure you want to Create the new Player and Inventory:" });
        if (confirmed)
        {
            try
            {
                
                CreateInventory.PokeBalls = new List<int> { 1001, 1002, 1003 };
                CreateInventory.NumberOfPokeBalls = 20;
                CreateInventory.NumberOfGreatBalls = 10;
                CreateInventory.NumberOfUltraBalls = 5;

                CreateInventory.HealthItems = new List<int> { 1001, 1002, 1003, 1004 };
                CreateInventory.NumberOfPotions = 20;
                CreateInventory.NumberOfSuperPotions = 10;
                CreateInventory.NumberOfHyperPotions = 6;
                CreateInventory.NumberOfMaxPotions = 2;

                CreateInventory.StatusConditionItems = new List<int> { 1001, 1002, 1003, 1004, 1005 };
                CreateInventory.NumberOfAntidotes = 5;
                CreateInventory.NumberOfAwakening = 5;
                CreateInventory.NumberOfBurnHeals = 5;
                CreateInventory.NumberOfIceHeals = 5;
                CreateInventory.NumberOfParalyzeHeals = 5;

                CreateInventory.ReviveItems = new List<int> { 1001, 1002 };
                CreateInventory.NumberOfRevives = 20;
                CreateInventory.NumberOfMaxRevives = 4;

                CreateInventory.TMs = new List<int> { 1029, 1001, 1040 };


                var createInventoryResponse = await httpClient.PostAsJsonAsync("api/PlayerInventory", CreateInventory);
                if (createInventoryResponse.IsSuccessStatusCode)
                {
                    // Get the created PlayerInventory's Id
                    var createdInventory = await createInventoryResponse.Content.ReadFromJsonAsync<PlayerInventoryDetail>();
                    int inventoryId = createdInventory.Id;

                    // Assign the PlayerInventory Id to the Player
                    CreatePlayer.ItemInventoryId = inventoryId;
                    CreatePlayer.Name = CreateInventory.NameOfPlayer;
                    CreatePlayer.CaughtPokemon = PokemonDictionary
                        .Where(kv => kv.Value)
                        .Select(kv => kv.Key)
                        .ToList();

                    List<int> createdPokemonIds = new List<int>();

                    foreach (var pokemonId in CreatePlayer.CaughtPokemon)
                    {
                        var pokemonResponse = await httpClient.GetFromJsonAsync<PokemonDetail>($"api/Pokemon/{pokemonId}");
                        if (pokemonResponse != null)
                        {
                            PokemonDetail = pokemonResponse;

                            PlayerPokeCreate.PokedexNumber = pokemonResponse.PokedexNumber;
                            PlayerPokeCreate.Name = pokemonResponse.Name;
                            PlayerPokeCreate.PokeNickName = pokemonResponse.PokeNickName;
                            PlayerPokeCreate.PokeTypeIdOne = pokemonResponse.PokeTypeIdOne;
                            PlayerPokeCreate.PokeTypeIdTwo = pokemonResponse.PokeTypeIdTwo;
                            PlayerPokeCreate.Weight = pokemonResponse.Weight;
                            PlayerPokeCreate.Height = pokemonResponse.Height;
                            PlayerPokeCreate.BaseExperience = pokemonResponse.BaseExperience;
                            PlayerPokeCreate.Health = pokemonResponse.Health;
                            PlayerPokeCreate.Description = pokemonResponse.Description;
                            PlayerPokeCreate.MoveOneId = pokemonResponse.MoveOneId;
                            PlayerPokeCreate.MoveTwoId = pokemonResponse.MoveTwoId;
                            PlayerPokeCreate.MoveThreeId = pokemonResponse.MoveThreeId;
                            PlayerPokeCreate.MoveFourId = pokemonResponse.MoveFourId;
                            PlayerPokeCreate.AbilityId = pokemonResponse.AbilityId;

                            var createPokeForPlayerResponse = await httpClient.PostAsJsonAsync("api/PlayerPokemon", PlayerPokeCreate);

                            if(createPokeForPlayerResponse.IsSuccessStatusCode)
                            {
                                var createdPokemonForPlayer = await createPokeForPlayerResponse.Content.ReadFromJsonAsync<PlayerPokeDetail>();
                                int pokemonForPlayerId = createdPokemonForPlayer.Id;
                                createdPokemonIds.Add(pokemonForPlayerId);
                            }
                            else
                            {
                                await jsRuntime.InvokeVoidAsync("alert", "Player Pokémon Not Created");
                            }
                        }
                    }

                    CreatePlayer.ActivePokemon = createdPokemonIds;

                    // Create Player
                    var createPlayerResponse = await httpClient.PostAsJsonAsync("api/Player", CreatePlayer);
                    if (createPlayerResponse.IsSuccessStatusCode)
                    {
                        await jsRuntime.InvokeVoidAsync("alert", "Player and Inventory Created");
                        navigationManager.NavigateTo("/GamePage1");
                    }
                    else
                    {
                        await jsRuntime.InvokeVoidAsync("alert", "Player Not Created");
                    }
                }
                else
                {
                    await jsRuntime.InvokeVoidAsync("alert", "Inventory Not Created");
                }
            }
            catch (Exception e)
            {
                ErrorMessage = e.Message;
            }
        }
    }

//The below code is for the accordion componet from The MUdBlazor library
//hhttps://mudblazor.com/components/expansionpanels#async-loading-of-data
//this code is use to provide async loading of data for the expansion panel
    private RenderFragment _panelContent;

    private async Task ExpandedChanged(bool newVal)
    {
        if (newVal)
        {
            await Task.Delay(600);
            _panelContent = _bigAsyncContent;
        }
        else
        {
            // Reset after a while to prevent sudden collapse.
            Task.Delay(350).ContinueWith(t => _panelContent = null).AndForget(); 
        }
    }

    private RenderFragment _bigAsyncContent = __builder =>
    {
        <div>
            <div>
                As you begin your Pokémon adventure you will be given a set of items to help you on your journey.
            </div>
            <div>
                These items will be stored in your inventory and can be used at certain times.
            </div>
            <br>
            <div>
                You will be given a set of Poké Balls to help you get Pokémon. You will also be given a set of
                Health Items to help you heal your Pokémon. There will be a set of Status Condition Items
                to help you heal your Pokémon from status conditions. Revive Items will be helpful as you start so we will give you a few of those
                to help you revive your Pokémon. You will also be given a set of TMs to help you teach your Pokémon
                new moves.
            </div>
        </div>
    };

}